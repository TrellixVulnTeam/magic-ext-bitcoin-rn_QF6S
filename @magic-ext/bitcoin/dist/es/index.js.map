{"version":3,"file":"index.js","sources":["../../src/types.ts","../../src/index.ts"],"sourcesContent":["export interface BitcoinConfig {\n  rpcUrl: string;\n  network: string;\n}\n\nexport enum BitcoinPayloadMethod {\n  BitcoinSignTransaction = 'btc_signTransaction',\n}\n","import { Extension } from '@magic-sdk/commons';\nimport { BitcoinConfig, BitcoinPayloadMethod } from './types';\n\nexport class BitcoinExtension extends Extension.Internal<'bitcoin', any> {\n  name = 'bitcoin' as const;\n  config: any = {};\n\n  constructor(public bitcoinConfig: BitcoinConfig) {\n    super();\n\n    this.config = {\n      rpcUrl: bitcoinConfig.rpcUrl,\n      chainType: 'BITCOIN',\n      options: {\n        network: bitcoinConfig.network,\n      },\n    };\n  }\n\n  public async signTransaction(txn: string, inputIndex: number) {\n    return this.request(\n      this.utils.createJsonRpcRequestPayload(BitcoinPayloadMethod.BitcoinSignTransaction, [txn, inputIndex]),\n    );\n  }\n}\n"],"names":["BitcoinPayloadMethod","BitcoinExtension","bitcoinConfig","_this","name","config","rpcUrl","chainType","options","network","signTransaction","txn","inputIndex","this","request","utils","createJsonRpcRequestPayload","BitcoinSignTransaction","Extension","Internal"],"mappings":"+IAKYA,GAAZ,SAAYA,GACVA,+CADF,CAAYA,IAAAA,OCFCC,IAAAA,sBAIX,WAAmBC,gBACjBC,sBADiBD,uBAHnBE,KAAO,YACPC,OAAc,GAEKF,gBAAAD,EAGjBC,EAAKE,OAAS,CACZC,OAAQJ,EAAcI,OACtBC,UAAW,UACXC,QAAS,CACPC,QAASP,EAAcO,+GAKhBC,yBAAgBC,EAAaC,OACxC,uBAAOC,KAAKC,QAALD,KACAE,MAAMC,4BAA4BhB,EAAqBiB,uBAAwB,CAACN,EAAKC,MAlBhG,uCAAsCM,EAAUC"}