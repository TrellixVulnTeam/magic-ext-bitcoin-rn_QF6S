{"version":3,"file":"index.mjs","sources":["../../src/types.ts","../../src/index.ts"],"sourcesContent":["export interface BitcoinConfig {\n  rpcUrl: string;\n  network: string;\n}\n\nexport enum BitcoinPayloadMethod {\n  BitcoinSignTransaction = 'btc_signTransaction',\n}\n","import { Extension } from '@magic-sdk/commons';\nimport { BitcoinConfig, BitcoinPayloadMethod } from './types';\n\nexport class BitcoinExtension extends Extension.Internal<'bitcoin', any> {\n  name = 'bitcoin' as const;\n  config: any = {};\n\n  constructor(public bitcoinConfig: BitcoinConfig) {\n    super();\n\n    this.config = {\n      rpcUrl: bitcoinConfig.rpcUrl,\n      chainType: 'BITCOIN',\n      options: {\n        network: bitcoinConfig.network,\n      },\n    };\n  }\n\n  public async signTransaction(txn: string, inputIndex: number) {\n    return this.request(\n      this.utils.createJsonRpcRequestPayload(BitcoinPayloadMethod.BitcoinSignTransaction, [txn, inputIndex]),\n    );\n  }\n}\n"],"names":["BitcoinPayloadMethod","BitcoinExtension","Extension","Internal","constructor","bitcoinConfig","super","name","config","this","rpcUrl","chainType","options","network","signTransaction","txn","inputIndex","request","utils","createJsonRpcRequestPayload","BitcoinSignTransaction"],"mappings":"mDAKYA,GAAZ,SAAYA,GACVA,+CADF,CAAYA,IAAAA,aCFCC,UAAyBC,EAAUC,SAI9CC,YAAmBC,GACjBC,aADiBD,0BAHnBE,KAAO,eACPC,OAAc,GAEKC,mBAAAJ,EAGjBI,KAAKD,OAAS,CACZE,OAAQL,EAAcK,OACtBC,UAAW,UACXC,QAAS,CACPC,QAASR,EAAcQ,UAKDC,sBAACC,EAAaC,GACxC,YAAYC,QACVR,KAAKS,MAAMC,4BAA4BnB,EAAqBoB,uBAAwB,CAACL,EAAKC"}